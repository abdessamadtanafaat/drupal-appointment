<?php

/**
 * Implements hook_install().
 */
function appointment_install() {

  // Create the 'Appointment Types' vocabulary.
  _appointment_create_appointment_types_vocabulary();

  // Create example terms for the 'Appointment Types' vocabulary.
  _appointment_create_appointment_types_terms();

  // Create the 'Advisor' role.
  _appointment_create_advisor_role();

  // Assign the 'Advisor' role to specific users.
  _appointment_assign_advisor_role();

  // Create the 'Advisor' user.
  _appointment_create_advisor_user();

}

/**
 * Creates the 'Advisor' role.
 */
function _appointment_create_advisor_role() {
  // Check if the role already exists.
  $role = \Drupal\user\Entity\Role::load('advisor');

  if (!$role) {
    // Create the 'Advisor' role.
    $role = \Drupal\user\Entity\Role::create([
      'id' => 'advisor',
      'label' => 'Advisor',
    ]);
    $role->save();

    // Assign permissions to the 'Advisor' role.
    $permissions = [
      'access content',
      // Add only valid permissions here.
    ];
    user_role_grant_permissions('advisor', $permissions);

    // Log the creation of the role.
    \Drupal::logger('appointment')->notice('Created role: Advisor');
  }
}

/**
 * Assigns the 'Advisor' role to specific users.
 */
function _appointment_assign_advisor_role() {
  // Load the user storage service.
  $user_storage = \Drupal::entityTypeManager()->getStorage('user');

  // Query users with a specific email domain (e.g., '@example.com').
  $query = $user_storage->getQuery()
//    ->condition('mail', '%@void.com', 'LIKE') // Replace with your domain.
    ->condition('status', 1) // Only active users.
    ->accessCheck(TRUE); // Explicitly enable access checking.

  // Execute the query and get the user IDs.
  $uids = $query->execute();

  if (!empty($uids)) {
    // Load the user entities.
    $users = $user_storage->loadMultiple($uids);

    // Assign the 'Advisor' role to each user.
    foreach ($users as $user) {
      if (!$user->hasRole('advisor')) {
        $user->addRole('advisor');
        $user->save();
      }
    }

    // Log the assignment of the role.
    \Drupal::logger('appointment')
      ->notice('Assigned Advisor role to users: @uids', ['@uids' => implode(', ', $uids)]);
  }
}
/**
 * Creates the 'Appointment Types' vocabulary.
 */
function _appointment_create_appointment_types_vocabulary() {
  // Check if the vocabulary already exists.
  $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::load('appointment_types');

  if (!$vocabulary) {
    // Create the "Appointment Types" taxonomy vocabulary.
    $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::create([
      'vid' => 'appointment_types', // Machine name of the vocabulary.
      'name' => 'Appointment Types', // Human-readable name.
      'description' => 'A vocabulary for appointment types.',
    ]);
    $vocabulary->save();

    // Log the creation of the vocabulary.
    \Drupal::logger('appointment')->notice('Created taxonomy vocabulary: Appointment Types.');
  } else {
    // Log that the vocabulary already exists.
    \Drupal::logger('appointment')->notice('Taxonomy vocabulary "Appointment Types" already exists.');
  }
}

/**
 * Creates example terms for the 'Appointment Types' vocabulary.
 */
function _appointment_create_appointment_types_terms() {
  // Define example terms for the vocabulary.
  $terms = [
    ['name' => 'Consultation', 'vid' => 'appointment_types'],
    ['name' => 'Meeting', 'vid' => 'appointment_types'],
    ['name' => 'Follow-up', 'vid' => 'appointment_types'],
  ];

  // Create example terms if they don't already exist.
  foreach ($terms as $term_data) {
    $term = \Drupal::entityTypeManager()
      ->getStorage('taxonomy_term')
      ->loadByProperties(['name' => $term_data['name'], 'vid' => $term_data['vid']]);

    if (empty($term)) {
      $term = \Drupal\taxonomy\Entity\Term::create($term_data);
      $term->save();

      // Log the creation of each term.
      \Drupal::logger('appointment')->notice('Created taxonomy term: @term in vocabulary: @vocabulary.', [
        '@term' => $term_data['name'],
        '@vocabulary' => $term_data['vid'],
      ]);
    } else {
      // Log that the term already exists.
      \Drupal::logger('appointment')->notice('Taxonomy term "@term" already exists in vocabulary: @vocabulary.', [
        '@term' => $term_data['name'],
        '@vocabulary' => $term_data['vid'],
      ]);
    }
  }
}

/**
 * Creates the 'Advisor' user.
 */
function _appointment_create_advisor_user() {
  // Create the 'Advisor' user.
  $user = \Drupal\user\Entity\User::create();

  // Set the user's properties.
  $user->setUsername('advisor_void'); // Username for the advisor.
  $user->setPassword('void2015'); // Set a secure password.
  $user->setEmail('void@gmail.com'); // Email address for the advisor.
  $user->activate(); // Activate the user.

  // Assign the 'Advisor' role to the user.
  $user->addRole('advisor');

  // Save the user.
  $user->save();

  // Log the creation of the user.
  \Drupal::logger('appointment')->notice('Created Advisor user with ID: @uid', ['@uid' => $user->id()]);
}
