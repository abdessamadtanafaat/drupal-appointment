<?php
//
///**
// * Implements hook_entity_type_build().
// */
//function appointment_entity_type_build(array &$entity_types) {
//  // Define custom entity 'agency'.
//  $entity_types['agency'] = array(
//    'class' => 'Drupal\appointment\Entity\AgencyEntity',
//    'label' => t('Agency'),
//    'module' => 'appointment',
//    'base_table' => 'agency',
//    'entity_keys' => array(
//      'id' => 'id',
//      'label' => 'name',
//    ),
//    'fieldable' => TRUE,
//    'admin_permission' => 'administer agency',
//  );
//}

use Drupal\Core\Asset\AttachedAssetsInterface;

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
//function appointment_preprocess_page(array &$variables) {
//  if (\Drupal::routeMatch()->getRouteName() == 'appointment.choose_agency') {
//    $variables['#attached']['library'][] = 'appointment/appointment_styles';
//  }
//}

//function appointment_page_attachments(array &$attachments) {
//  if (\Drupal::routeMatch()->getRouteName() == 'appointment.choose_agency') {
//    $attachments['#attached']['library'][] = 'appointment/appointment_styles';
//  }
//}

/**
 * Implements hook_theme().
 */
function mytheme_theme($existing, $type, $theme, $path) {
  return [
    'agency_cards' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Theme function to render radios as cards.
 */
//function theme_agency_cards($variables) {
//  $element = $variables['element'];
//  $output = '';
//
//  foreach ($element['#options'] as $key => $label) {
//    $id = $element['#id'] . '-' . $key;
//    $output .= '<div class="agency-card">';
//    $output .= '<input type="radio" id="' . $id . '" name="' . $element['#name'] . '" value="' . $key . '" />';
//    $output .= '<label for="' . $id . '">';
//    $output .= '<div class="card-content">';
//    $output .= '<h3>' . $label . '</h3>';
//    // Add additional content for the card (e.g., description, image, etc.).
//    $output .= '</div>';
//    $output .= '</label>';
//    $output .= '</div>';
//  }
//
//  return $output;
//}
//

/**
 * Implements hook_theme().
 */
/**
 * Implements hook_theme().
 */
function appointment_theme($existing, $type, $theme, $path) {
  return [
    // Define the 'agency_card' theme hook.
    'agency_card' => [
      'variables' => [
        'agency' => NULL,            // The agency entity.
        'agency_id' => NULL,         // The agency ID.
        'agency_edit_url' => NULL,   // The URL for editing the agency.
        'agency_delete_url' => NULL, // The URL for deleting the agency.
      ],
      'template' => 'agency-card',  // The Twig template to use.
    ],
  ];
}




